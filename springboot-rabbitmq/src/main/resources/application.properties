server.port=8321
server.servlet.context-path=/rabbitmq

spring.rabbitmq.host=121.5.149.129
spring.rabbitmq.port=5672
spring.rabbitmq.username=admin
spring.rabbitmq.password=wo2admin


#发布确认开启,配合实现RabbitTemplate.ConfirmCallback 接口
#发布消息成功到交换机后会触发回调方法
spring.rabbitmq.publisher-confirm-type=correlated

#none,默认值，禁用发布确认模式
#spring.rabbitmq.publisher-confirm-type=none

#作用一；同correlated
#作用二：发布消息成功后使用rabbitTemplate调用waitForConfirms或waitForConfirmsOrDie方法，
#等待broker节点返回消息结果，根据返回结果来判定下一步的逻辑，需要注意的点是：waitForConfirmsOrDie方法如果返回false则会关闭channel，
#则接下来无法发送消息到broker
#同步确认回调
#spring.rabbitmq.publisher-confirm-type=simple


#开启回退消息，交换机接收到消息后，发送队列失败时将消息回退给生产者
#配合实现RabbitTemplate.ReturnsCallback 接口
spring.rabbitmq.publisher-returns=true

#死信队列实现延迟队列
dead.letter.queue.exchange.normal=normal_exchange
dead.letter.queue.exchange.dead=dead_exchange
dead.letter.queue.ttl.short.queue=ttl_short_queue
dead.letter.queue.ttl.long.queue=ttl_long_queue
dead.letter.queue.no.ttl.queue=no_ttl_queue
dead.letter.queue.dead.queue=dead_queue
dead.letter.queue.routing.key.tsqen=tsq_en
dead.letter.queue.routing.key.tlqen=tlq_en
dead.letter.queue.routing.key.ntqen=ntq_en
#dead.letter.queue.routing.key.tsqed=tsq_ed
#dead.letter.queue.routing.key.tlqed=tlq_ed
dead.letter.queue.routing.key.dqed=dq_ed
dead.letter.queue.short.queue.ttl=10000
dead.letter.queue.long.queue.ttl=40000

#延迟交换机插件实现延迟队列
delay.queue.exchange.name=delay_exchange
delay.queue.queue.name=delay_queue
delay.queue.routing.key.name=delay_routing_key

#发布确认(高级)，mq服务器宕机保证消息不丢失
confirm.exchange.name=confirm_exchange
confirm.queue.name=confirm_queue
confirm.routing.key.name=confirm_routing_key

#备份交换机
#用于处理上面的开启发布确认交换机投递失败的消息处理和报警
#回退消息和备份交换机同时开启，备份交换机优先级更高
confirm.returns.backup.exchange.name=backup_exchange
confirm.returns.backup.process.queue.name=process_queue
confirm.returns.backup.alarm.queue.name=alarm_queue
confirm.returns.backup.process.routing.key=process_routing_key
confirm.returns.backup.alarm.routing.key=alarm_routing_key


